NTSTATUS ObRegisterCallbacks(_In_ POB_CALLBACK_REGISTRATION CallbackRegistration, _Outptr_ PVOIOD *RegistrationHandle);

Prior to registration, an OB_CALLBACK_REGISTRATION structure must be initialized, which provides teh necessary details about what the driver is registering for.
The RegistrationHandle is the return value upon a successful registartion, which is just an opaque pointer used for unregistration by calling obUnregisterCallbacks.

Let's see OB_CALLBACK_REGISTRATION

this is define in wdm.h

typedef struct _OB_CALLBACK_REGISTRATION {
    _In_ USHORT                     Version;
    _In_ USHORT                     OperationRegistrationCount;
    _In_ UNICODE_STRING             Altitude;
    _In_ PVOID                      RegistrationContext;
    _In_ OB_OPERATION_REGISTRATION  *OperationRegistration;
} OB_CALLBACK_REGISTRATION, *POB_CALLBACK_REGISTRATION;

Version is a just a constant that must be set to OB_FLT_REGISTRATION_VERSION(0x100) also use ObGetFilterVersion() 
OperationRegistrationCount determins the number of OB_OPERATION_REGISTRATION structures that are pointed to by OperaationREgistration.
Altitude specifies a number that affects the order of callbacks invocations for this driver. (Altitude will study later in minifilter)



OB_OPERATION_REGISTRATION strctures that the driver sets up its callbacks, determines that object ypes and operation are of interest

this is define in wdm.h

typedef struct _OB_CALLBACK_REGISTRATION {
    _In_ USHORT                     Version;
    _In_ USHORT                     OperationRegistrationCount;
    _In_ UNICODE_STRING             Altitude;
    _In_ PVOID                      RegistrationContext;
    _In_ OB_OPERATION_REGISTRATION  *OperationRegistration;
} OB_CALLBACK_REGISTRATION, *POB_CALLBACK_REGISTRATION;

ObjectType is a pointer to the objet type for this instance registration. process, thread or desktop.
this pointeris exported as global kernel variables. like PsPorcessType, PsThreawdType and ExDesktopObjectType.

Operation is an bit flags enumeration selecting create, open is OB_OPERATION_HANDLE_CREATE) and duplicate is OB_OPERATION_HANDLE_DUPLICATE

OB_OPERATION_HANDLE_CREATE refers to calls to user modefunction such as CreateProcess, CreateThread, CreateDesktop, OpenProcess, OpenThread, OPenDesktop.. so on 

OB_OPERATION_HANDLE_DUPLICATE refers to handle duplication for DuplicateHandle user mode API



